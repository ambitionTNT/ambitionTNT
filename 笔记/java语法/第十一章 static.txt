static
   1、static 翻译为“静态的”
   2、所有static关键字修饰的都是类相关的，类级别的。
   3、所有static修饰的，都是采用“类名.”的方式访问。
   4、static修饰的变量：静态变量
   5、static修饰的方法：静态方法

变量的分类：
   变量根据声明的位置进行划分：
     在方法体中声明的变量叫做：局部变量。
     在方法体外声明的变量叫做：成员变量。

成员变量又可分为：
	实例变量
	静态变量

加static的变量叫做静态变量，是类级别的。
静态变量在类加载是初始化，不需要new对象，静态变量的空间就开出来了。
静态变量存储在方法区。

1、使用static关键字可以定义：静态代码块。
2、什么是静态代码块？
	static{
	   java语句；
	}
3、static 静态代码块在什么时候执行呢？
	类加载时执行，并且只执行一次。
	静态代码块有这样的特征
4、注意：静态代码块在类加载时执行，并且在main方法执行前执行。
5、静态代码块一般是按照自上而下的顺序执行。
6、作用：
	第一：静态代码块不是那么常用。
	第二：静态代码块这种语法机制实际上是SUN公司给我们java
	程序员的一个特殊的时机，这个时机叫做：类加载时机。
   具体的业务：
	项目经理说：所有我们编写的程序，只要是类加载了，请记录一下类加载的日志。
	（在何时，那个类加载到了JVM当中了）。
   这些记录日志的代码写到了 静态代码块。

 实例语句块：
	{
		java语句。
	}
实例语句块在类加载时并没有执行。
只要是构造方法体执行，必然在构造方法执行之前执行。


this：
1、this是一个变量，一个引用。this保存当前对象的内存地址，指向自身。
   所以严格意义上来说，this就是代表着当前对象；
   this存储在堆内存当中对象的内存。
2、this只能使用在实例方法中。谁调用实例方法，this就代表这谁。
3、this.大部分情况下都是可以省略的



关于方法来说，什么时候定义为实例方法？什么时候定义为静态方法？
		有没有参考标准。

		此方法一般都是描述了一个行为，如果说该行为必须由对象去触发。
		那么该方法定义为实例方法。

		参考标准：
			当这个方法体当中，直接访问了实例变量，这个方法一定是实例方法。

			我们以后开发中，大部分情况下，如果是工具类的话，工具类当中的方法
			一般都是静态的。(静态方法有一个优点，是不需要new对象，直接采用类名
			调用，极其方便。工具类就是为了方便，所以工具类中的方法一般都是static的。)

			什么是工具类？？？？？
				以后讲。（工具类就是为了方便编程而开发的一些类。）
	
	类 = 属性 + 方法
		属性描述的是：状态
		方法描述的是：行为动作
	
	一个方法代表了一个动作。

	什么时候方法定义为实例方法？
		张三考试，得分90
		李四考试，得分100
		不同的对象参加考试的结果不同。
		我们可以认定“考试”这个行为是与对象相关的行为。
		建议将“考试”这个方法定义为实例方法。
/*
总结：
	到目前为止，你遇到的所有java程序，有顺序要求的是哪些？
		第一：对于一个方法来说，方法体中的代码是有顺序的，遵循自上而下的顺序执行。
		第二：静态代码块1和静态代码块2是有先后顺序的。
		第三：静态代码块和静态变量是有先后顺序的。
*/


1、this可以使用在实例方法中，不能使用在静态方法中。
2、this关键字大部分情况下可以省略，什么时候不能省略呢？
	在实例方法中，或者构造方法中，为了区分局部变量和实例变量，
	这种情况下：this. 是不能省略的。


	1、this除了可以使用在实例方法中，还可以用在构造方法中。
	2、新语法：通过当前的构造方法去调用另一个本类的构造方法，可以使用以下语法格式：
		this(实际参数列表);
			通过一个构造方法1去调用构造方法2，可以做到代码复用。
			但需要注意的是：“构造方法1”和“构造方法2” 都是在同一个类当中。

	3、this() 这个语法作用是什么？
		代码复用。
	
	4、死记硬背：
		对于this()的调用只能出现在构造方法的第一行。