1、方法是什么？Method
   1.1、什么是方法？
   方法就是 一段可以完成某个特定功能的并 且可以重复利用的代码片段，并且这个代码可以被重复利用。
	在C中被称为函数，在java中不叫函数叫方法。

		
	对于一个java程序来说，如果没有“方法”，代码无法得到重复使用。
	复用性较差。 

	注意：
	程序开始执行的时候是先执行main方法。
	因为main方法是一个入口。
	在java语言中所有的的方法体中的代码都必须遵循自上而下的顺序依次执行。

	main方法不需要程序员手动调用，是由JVM调用的，但是除了main方法之外其他的方法，
	都需要程序员手动调用，方法只有调用才能执行，方法不调用，不会执行
		
	方法定义在类体之中，方法定义的位置没有特殊要求

	方法的定义：
		
	[修饰符列表] 返回值类型 方法名(形式参数列表){
		方法体：
	}


	第一：返回值类型 可以是任何类型，只要是java中合法的数据类型就可以，包括基本数据类型和引用数据类型。
	
	
	第二：返回值： 
		返回值一般指的是一个方法执行结束之后的结果。
		返回值通常是一个数据，所以被称为“值”，而且还叫 “返回值”。
		
		方法就是为了完成某个特定的功能，方法结束之后 大部分情况下都是有一个结果的，而体现结果的一般都是数据。
		数据要有类型，这便是返回值类型
		
	第三：
		当一个方法执行结束不返回任何值的时候，返回值也不能是空白，必须写上void关键字，表示返回值为空。
		
	第四：	
		如果返回值类型不是void ，那么在方法体执行的结束的时候必须要使用return 进行返回；
		return 值; 否则如果不写 编译器就会报错。
	
	第五：
		只要有“return”关键字的语句执行，当前方法从此结束。
		return 只要执行，当前所在的方法结束;
	
	第六：如果返回值类型是void，那么在方法体当中不能由“return 值”；这样的 return; 可以执行 表示方法的结束。

	第七： 方法名要见名知意，驼峰命名法，要求首字母小写，后面每个单词首字母大写。

  1.2、形式参数列表
	简称：形参
	注意：形参列表中的每一个参数都是”局部变量“，方法结束之后内存释放。
	形参的个数是：0~N个。

	注意：形参有多个的话使用“英文逗号”隔开。
	形参的数据类型起决定性作用，形参对应的变量名是随意的。

 1.3、方法体
	由java语句构成。java语句以“;”结尾。
	方法体当中编写的是业务逻辑代码，完成某个特定的功能。
2、方法的调用
	方法必须调用才能执行；
	语法 ：
		类名.方法名（实际参数列表）
	
	实参和形参要一一对应 
	

	如果要返回值，要保证百分之百 保证 返回语句可以执行。

	return 语句下面不能 再编写其它代码，编译不会通过：无法访问的语句。


 局部变量：只在方法体中有效，方法结束之后，局部变量的内存就释放了。
	
	JVM三块只要的内存：栈内存、堆内存、方法区内存。
	方法体最先有数据：方法区中放代码片段。存放class字节码
	堆内存：：
	栈内存：方法调用的时候，该方法需要的内存空间在栈中分配。
	方法不调用是不会放在栈中分配空间的

	方法只有在调用的时候才会在栈中分配空间，并且调用是就是压栈。
	方法执行结束之后，该方法所需要的空间就会释放，此时发生弹栈

	


方法重载（overload）：
	
	如果没有重载，代码可能比较冗余。
	比如 计算两数之和 ，计算 int long double 可能要写三个方法。
	
	使用方法重载机制的优点：
	
	优点1：代码简洁美观
	优点2：”功能相似“的，可以让”方法名“相同

	在Java语言中，进行方法的区分？
	  首先java编译器会通过方法名进行区分。但是在java语言中允许方法名相同的情况
	  出现，如果方法名相同的情况下，编译器会通过方法的参数类型进行区分，既形式参数列表。

	
1、什么时候会发生方法重载？
	在同一个类当中，如果“功能1”和“功能2”它们的功能是相似的，
	那么可以考虑将它们的方法名一致，这样代码既美观，有便于后期的代码编写（容易记忆，方便使用）

	注意：方法重载overload不能随便使用，如果两个功能压根不相关，
	不相似，根本没关系，此时两个方法使用重载机制的话，编码更加麻烦，无法进行方法功能的区分。

2、什么时候会发生方法重载？
	条件1：在同一个类当中
	条件2：方法名相同
	条件3：参数列表不同
		参数个数不同
		参数类型不同
		参数顺序不同
	
	只要满足以上三个条件，那么我们可以认定
	方法和方法之间发生了重载机制。
	不管怎么写，最终一定能让java编译器很好的区分开
	方法重载和方法的返回值无关。
	方法重载和方法的修饰符列表无关。
	java区分方法是 通过 方法名和形式参数列表

		




方法递归？
 1、什么是方法递归
	方法自己调用自己，这就是递归

 2、当递归时程序没有结束条件，一定会发生：
	栈内存溢出错误：StackOverflowError
	所以：递归必须要有结束条件。

3、递归假设是有结束条件的，就一定不会发生栈内存溢出错误吗？
   假设这个结束条件是对的，是合法的，递归有的时候也会出现内存溢出。
   因为可能递归的太深，内存不够。

4、在实际的开发中，不要轻易选择递归，能用循环就用循环，因为效率比递归高。

5、出现栈溢出的解决思路：
	
   首先，检查递归的结束条件。如果不对则修改

   其次，如果条件没问题，就要手动调整栈内存的空间大小了。

   使用 java -X 命令可以调整堆栈大小。

6、作业：

	使用递归的方式计算N的阶乘。
	