1、数据类型
   1.1、数据类型有什么用？
	数据类型用来声明变量，程序在运行过程中根据不同的数据类型分配不同大小
	的空间。
	
   1.2、数据类型的分类
      第一种：基本数据类型
	可分为4大类8小种
	第一类：整型
		byte，short，int，long
	第二类：浮点型
		float、double
	第三类：布尔型
		boolean
		只有true 与false 两个
	第四类：字符型
		char  单引号括起来。



      第二种：引用数据类型
	字符串String属于引用数据类型。
	String字符串不属于基本数据类型
	java中除了基本数据类型外，剩下的都是引用数据类型。
	引用数据类型在后面的面向对象的时候才会使用。


	类型        占用字节数     取值范围
	-----------------------------------------------
	byte          1			[-128~127]
	short         2			[-32768~32767]
	int           4			[-2147483648~2147483648]
	long          8			
	float         4
	double        8
	boolean       1
	char          2			[0-65535]

   对于8中基本数据类型来说：
   其中byte,short,int,long,float,double,boolean，这7种类型计算机表示起来
        比较容易，因为他们都是数字。其中布尔类型只有两个值true和false，实际上
        true和false分别在C++中对应的是1和0，1为true，false为0。

	对于char类型来说计算机表示起来比较麻烦，因为char对应的是文字，每一个国家
        的文字不一样，文字不能直接通过“自然算法”转换成二进制。这个时候怎么办？
            字符编码诞生了。
         
        什么是字符编码？
            字符编码是人为的定义的一套转换表。
            在字符编码中规定了一系列的文字对应的二进制。
            字符编码其实本质上就是一本字典，该字段中描述了文字与二进制之间的对照关系。
            字符编码是人为规定的。（是某个计算机协会规定的。）
         
        字符编码涉及到编码和解码两个过程，编码和解码的时候必须采用同一套字符编码
        方式，不然就会出现乱码。
 
        关于字符编码的发展过程？
            起初的时候计算机是不支持文字的，只支持科学计算。实际上计算机起初是为了
            战争而开发的，计算导弹的轨道....
 
            后来随着计算机的发展，计算机开始支持文字，最先支持的文字是英文，英文
            对应的字符编码方式是：ASCII码。
 
            ASCII码采用1byte进行存储，因为英文字母是26个。（键盘上所有的键全部算上也
            超不过256个。1byte可以表示256种不同的情况。所以英文本身在计算机方面就占有
            优势。）
                'a' --(采用ASCII码进行编码)-> 01100001
                01100001 --(采用ASCII码进行解码)-> 'a'
                如果编码和解码采用的不是同一个编码方式，会出现乱码。
                'b' ---> 98
                'c' ---> 99...
                'a' ---> 97
 
                'A' ---> 65
                'B' ---> 66
                ...
 
                '0' ---> 48  （这个'0'不是那个0，是文字'0'）
                '1' ---> 49
             
            随着计算机语言的发展，后来国际标准组织制定了ISO-8859-1编码方式，
            又称为latin-1编码方式，向上兼容ASCII码。但不支持中文。
 
            后来发展到亚洲，才支持中文，日文，韩文....
            中文这块的编码方式：GB2312<GBK<GB18030 （容量的关系）
            以上编码方式是简体中文。
 
            繁体中文：big5（台湾使用的是大五码。）
 
            在java中，java语言为了支持全球所有的文字，采用了一种字符编码方式
            叫做unicode编码。unicode编码统一了全球所有的文字，支持所有文字。
            具体的实现包括：UTF-8 UTF-16 UTF-32....
         
        需要记住：
            ASCII（'a'是97 'A'是65 '0'是48...）
            ISO-8859-1（latin-1）
            GB2312
            GBK
            GB18030
            Big5
            unicode（utf8 utf16 utf32）
	    ACSII和ansi以及unicode
ASCII-ANSI-Unicode
1、标准ASCII只使用7个bit，扩展的ASCII使用8个bit
2、ASCII码包含一些特殊空字符
3、ASCII码是ANSI码的子集，ANSI编码是一种对ASCII码的拓展:ANSI编码用0x00~0x7f (即十进制下的0到127)范围的1 个字节来表示1个英文字符，
	超出一个字节的 0x80~0xFFFF 范围来表示其他语言的其他字符。也就是说，ANSI码仅在前128( 0-127 ) 个与ASCII码相同，
	之后的字符全是某个国家语言的所有字符。
4、在简体中文的Windows系统中，ANSI就是GB2312。ANSI编码其实包括很多编码:中国制定了GB2312编码，用来把中文编进去另外，日本把日文编到ShiftJIS里，
韩国把韩文编到Euc-kr里，各国有各国的标准。
5、为了解决不同国家ANSI编码的冲突问题，Unicode应运而生:如果全世界每一个符号都给予一个独一无二的编码，那么乱码问题就会消失。这就是Unicode，就像它的名字都表示的，这是一种所有符号的编码。
Unicode标准也在不断发展，但最常用的是用两个字节表示一个字符。现代操作系统和大多数编程语言都直接支持Unicode.
6、值得注意的是unicode编码中一个中文字符占2个字节，而UTF-8一个中文字符占3个字节。
从unicode到uft-8并不是直接的对应，而是要过一些算法和规则来转换。
在计算机内存中，统一使用Unicode编码，当需要保存到硬盘或者需要传输的时候，就转换为UTF-8编码


结论：byte、char、short做混合运算的时候，各自先转换成int再做运算。
结论：多种数据类型做混合运算的时候，最终的结果类型是“最大容量”对应的类型。
char+short+byte 这个除外。
因为char + short + byte混合运算的时候，会各自先转换成int再做运算。

1、在java语言中boolean类型只有两个值，没有其他值：
true和false。
不像C或者C++，C语言中1和0也可以表示布尔类型。

2、boolean类型在实际开发中使用在哪里呢？
		使用在逻辑判断当中，通常放到条件的位置上（充当条件）

1、关于数据类型详解
    字符型：char
    整数型：byte short int long
        byte b = 127; // 可以直接赋值
        short s = 32767; // 可以直接赋值
        char // 没有超出char的取值范围可以直接赋值给char变量吗?
	long  后面 要加 L
 
    浮点型：float double，float 要在后面加个f
    布尔型：boolean
 
2、综合的看一下，在类型转换的时候需要遵循哪些规则？
 
    第一条：八种基本数据类型中，除 boolean 类型不能转换，剩下七种类型之间都可以
    进行转换；
 
    第二条：如果整数型字面量没有超出 byte,short,char 的取值范围，可以直接将其赋
    值给byte,short,char 类型的变量；
 
    第三条：小容量向大容量转换称为自动类型转换，容量从小到大的排序为：
    byte < short(char) < int < long < float < double，其中 short和 char 
    都占用两个字节，但是char 可以表示更大的正整数；
 
    第四条：大容量转换成小容量，称为强制类型转换，编写时必须添加“强制类型转换符”，
    但运行时可能出现精度损失，谨慎使用；
 
    第五条：byte,short,char 类型混合运算时，先各自转换成 int 类型再做运算；
 
    第六条：多种数据类型混合运算，各自先转换成容量最大的那一种再做运算；
 
    所有的笔试题都超不出以上的6条规则。死记硬背。

